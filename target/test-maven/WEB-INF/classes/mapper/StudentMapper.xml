<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.hcw.dao.StudentMapper" >
    <resultMap id="BaseResultMap" type="com.cn.hcw.entity.Student" >
            <id column="student_id" property="studentId" jdbcType="VARCHAR" />
            <result column="name" property="name" jdbcType="VARCHAR" />
            <result column="age" property="age" jdbcType="INTEGER" />
            <result column="sex" property="sex" jdbcType="VARCHAR" />
            <result column="height" property="height" jdbcType="DOUBLE" />
            <result column="weight" property="weight" jdbcType="DOUBLE" />
            <result column="address" property="address" jdbcType="VARCHAR" />
            <result column="company" property="company" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Base_Column_List">
    student_id,name,age,sex,height,weight,address,company
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tb_student
        where student_id = #{studentId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_student
    where student_id = #{studentId,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.cn.hcw.entity.Student">
    <selectKey resultType="java.lang.String" order="BEFORE" keyProperty="studentId">
        SELECT UPPER(UUID()) AS studentId
    </selectKey>
    insert into tb_student (student_id,name,age,
		sex,height,weight,
		address,company)
    values (#{studentId,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR},#{age,jdbcType=INTEGER},
		#{sex,jdbcType=VARCHAR},#{height,jdbcType=DOUBLE},#{weight,jdbcType=DOUBLE},
		#{address,jdbcType=VARCHAR},#{company,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cn.hcw.entity.Student">
        <selectKey resultType="java.lang.String" order="BEFORE" keyProperty="studentId">
            SELECT UPPER(UUID()) AS studentId
        </selectKey>
    insert into tb_student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentId != null" >
          student_id,
      </if>
      <if test="name != null" >
          name,
      </if>
      <if test="age != null" >
          age,
      </if>
      <if test="sex != null" >
          sex,
      </if>
      <if test="height != null" >
          height,
      </if>
      <if test="weight != null" >
          weight,
      </if>
      <if test="address != null" >
          address,
      </if>
      <if test="company != null" >
          company
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentId != null" >
          #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
          #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
          #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
          #{sex,jdbcType=VARCHAR},
      </if>
      <if test="height != null" >
          #{height,jdbcType=DOUBLE},
      </if>
      <if test="weight != null" >
          #{weight,jdbcType=DOUBLE},
      </if>
      <if test="address != null" >
          #{address,jdbcType=VARCHAR},
      </if>
      <if test="company != null" >
          #{company,jdbcType=VARCHAR}
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.cn.hcw.entity.Student">
    update tb_student
    <set>
    <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
    </if>
    <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
    </if>
    <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
    </if>
    <if test="record.height != null">
        height = #{record.height,jdbcType=DOUBLE},
    </if>
    <if test="record.weight != null">
        weight = #{record.weight,jdbcType=DOUBLE},
    </if>
    <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
    </if>
    <if test="record.company != null">
        company = #{record.company,jdbcType=VARCHAR}
    </if>
    </set>
    where student_id = #{record.studentId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.hcw.entity.Student">
    update tb_student
    set name = #{record.name,jdbcType=VARCHAR},
		age = #{record.age,jdbcType=INTEGER},
		sex = #{record.sex,jdbcType=VARCHAR},
		height = #{record.height,jdbcType=DOUBLE},
		weight = #{record.weight,jdbcType=DOUBLE},
		address = #{record.address,jdbcType=VARCHAR},
		company = #{record.company,jdbcType=VARCHAR}
		
    where student_id = #{record.studentId,jdbcType=VARCHAR}
  </update>

    <select id="countByList" resultType="int">
        select COUNT(*)
        from tb_student
        where 1=1
        <if test="nameList != null and nameList != ''">
            and name in <foreach collection="nameList" open="(" close=")" item="item" separator=",">#{item}</foreach>
        </if>
    </select>

    <select id="countByArray" resultType="int">
        SELECT count(*)
        FROM tb_student
        WHERE 1=1
        <if test="arrays != null"> AND name IN
        <foreach collection="arrays" open="(" close=")" item="item" separator="," index="index" >#{item}</foreach>
        </if>
    </select>

    <select id="countByMap" resultType="int">
        SELECT COUNT(*)
        FROM tb_student
        WHERE 1=1
            AND sex = #{sex}
            AND age IN <foreach collection="ages" open="(" close=")" item="item" index="index" separator=",">#{item}</foreach>
    </select>

</mapper>